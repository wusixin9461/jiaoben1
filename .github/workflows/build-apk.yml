name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 增加超时时间
    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    # 缓存依赖以加快构建速度
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Cache buildozer
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          .buildozer
        key: ${{ runner.os }}-buildozer
        restore-keys: |
          ${{ runner.os }}-buildozer

    - name: Install dependencies
      run: |
        # 以sudo权限检查libtinfo相关包
        sudo apt-cache search libtinfo
        
        # 更新软件源并确保启用了universe仓库
        sudo apt-get update
        sudo add-apt-repository -y universe
        sudo apt-get update
        
        # 先安装libtinfo6，因为在Ubuntu Noble上它是可用的
        echo "安装libtinfo6..."
        sudo apt-get install -y libtinfo6
        
        # 为libtinfo5创建兼容性软链接
        sudo mkdir -p /usr/lib/x86_64-linux-gnu
        if [ -f /usr/lib/x86_64-linux-gnu/libtinfo.so.6 ]; then
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libtinfo.so.6 /usr/lib/x86_64-linux-gnu/libtinfo.so.5
          echo "已创建libtinfo.so.5到libtinfo.so.6的软链接"
        fi
        
        # 安装其他必要依赖
        echo "安装主要依赖包..."
        sudo apt-get install -y --no-install-recommends git zip unzip openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev
        
        # 安装buildozer
        python -m pip install --upgrade pip
        pip install --upgrade buildozer
        
        # 验证libtinfo安装状态
        echo "验证libtinfo安装状态..."
        ls -la /usr/lib/x86_64-linux-gnu/libtinfo* || true
        
        # 检查buildozer版本
        buildozer --version

    - name: Build APK
      run: |
        # 设置更长的超时时间
        export P4A_TIMEOUT=1800
        buildozer -v android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: pokemmo-automation-apk
        path: bin/*.apk
